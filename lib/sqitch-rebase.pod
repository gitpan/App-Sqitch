=head1 Name

sqitch-revert - Revert and redeploy database changes

=head1 Synopsis

  sqitch [options] rebase --onto-target <target>
  sqitch [options] rebase --onto-target <target> --upto-target <target>
  sqitch [options] rebase <target>
  sqitch [options] rebase <target> --upto-target <target>
  sqitch [options] rebase <target> <target>

=head1 Description

Revert and redeploy changes to the database. It's effectively a shortcut for
running L<C<sqitch revert>|sqitch-revert> and L<C<sqitch deploy>|sqitch-deploy>
in succession.

More specifically, starting from the current deployment state, changes will be
reverted in reverse the order of application. All changes will be reverted
unless a target is specified, either via C<--onto> or with no option flag, in
which case changes will be reverted back to that target.

Once the revert finishes, changes will be deployed starting from the deployed
state through the rest of the deployment plan. They will run to the latest
change in the plan, unless a target is specified, either via C<--upto> or with
no option flag, in which case changes will be deployed up-to and including
that target.

If the database has not been deployed to, or its state already matches the
specified target, no reverts will be run. And if, at that point, the database
is up-to-date, no deploys will be run.

=head1 Options

=over

=item C<--onto-target>

=item C<--onto>

Specify the reversion target. Defaults to reverting all changes. See
L<sqitchchanges> for the various ways in which change targets can be
specified.

=item C<--upto-target>

=item C<--upto>

Specify the deployment target. Defaults to the last point in the plan. See
L<sqitchchanges> for the various ways in which change targets can be
specified.

=item C<-s>

=item C<--set>

Set a variable name and value for use by the database engine client, if it
supports variables. The format must be C<name=value>, e.g., C<--set
defuser='Homer Simpson'>. Overrides any values loaded from the
C<deploy.variables> or C<revert.variables> configurations.

=item C<-d>

=item C<--set-deploy>

Set a variable name and value for use by the database engine client when
deploying, if it supports variables. The format must be C<name=value>, e.g.,
C<--set defuser='Homer Simpson'>. Overrides any values from C<--set> or loaded
from the C<deploy.variables> configuration.

=item C<-r>

=item C<--set-revert>

Sets a variable name to be used by the database engine client during when
reverting, if it supports variables. The format must be C<name=value>, e.g.,
C<--set defuser='Homer Simpson'>. Overrides any values from C<--set> or loaded
from the C<deploy.variables> and C<revert.variables> configurations.

=item C<-y>

Disable the prompt that normally asks whether or not to execute the revert.

=back

=head1 Configuration Variables

=over

=item C<[deploy.variables]>

=item C<[revert.variables]>

A section defining database client variables. The C<deploy.variables>
configuration is read from the C<deploy> command configuration, on the
assumption that the values will generally be the same. If they're not, use
C<revert.variables> to override C<deploy.variables>.

These variables are Useful if your database engine supports variables in
scripts, such as PostgreSQL's
L<C<psql> variables|http://www.postgresql.org/docs/current/static/app-psql.html#APP-PSQL-INTERPOLATION>.

=item C<[rebase.no_prompt]>

=item C<[revert.no_prompt]>

A boolean value indicating whether or not to disable the prompt before
executing the revert. The C<rebase.no_prompt> variable takes precedence over
C<revert.no_prompt>, and both may of course be overridden by C<-y>.

=back

=head1 Sqitch

Part of the L<sqitch> suite.
